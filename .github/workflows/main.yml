name: CI/CD with dbt and PostgreSQL

on:
  push:
    branches:
      - main
      - staging
  pull_request:
    branches:
      - main
      - staging

jobs:
  dbt:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgis/postgis:12-3.1
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - name: Check out repository code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.11.5

    - name: Create Python virtual environment
      run: python3 -m venv dbt-env

    - name: Activate virtual environment and install dependencies
      run: |
        source dbt-env/bin/activate
        pip install --upgrade pip
        pip install -r requirements.txt

    - name: Iverwritting profiles.yml
      run: |
        echo "makeopendata:" > ./profiles.yml
        echo "  outputs:" >> ./profiles.yml
        echo "    dev:" >> ./profiles.yml
        echo "      type: postgres" >> ./profiles.yml
        echo "      host: ${{ secrets.TEST_POSTGRES_HOST }}" >> ./profiles.yml
        echo "      user: ${{ secrets.TEST_POSTGRES_USER }}" >> ./profiles.yml
        echo "      pass: ${{ secrets.TEST_POSTGRES_PASSWORD }}" >> ./profiles.yml
        echo "      port: ${{ secrets.TEST_POSTGRES_PORT }}" >> ./profiles.yml
        echo "      dbname: ${{ secrets.TEST_POSTGRES_DB }}" >> ./profiles.yml
        echo "      schema: public" >> ./profiles.yml
        echo "      threads: 1" >> ./profiles.yml
        echo "  target: dev" >> ./profiles.yml

    - name: Set DBT_PROFILES_DIR
      run: echo "DBT_PROFILES_DIR=. >> $GITHUB_ENV

    - name: check dbt project
      run: |
        source dbt-env/bin/activate
        dbt debug
        
    - name: Extract data and upload it to DB
      run: |
        source dbt-env/bin/activate
        python -m extract

    - name: Run dbt run
      run: |
        source dbt-env/bin/activate
        dbt run